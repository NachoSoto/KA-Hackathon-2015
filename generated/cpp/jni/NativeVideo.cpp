// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.idl

#include "NativeVideo.hpp"  // my header
#include "Marshal.hpp"
#include "NativeContentType.hpp"

namespace djinni_generated {

NativeVideo::NativeVideo() = default;

NativeVideo::~NativeVideo() = default;

auto NativeVideo::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeVideo>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c.hasQuestions)),
                                                           ::djinni::get(::djinni::Map<::djinni::String, ::djinni::String>::fromCpp(jniEnv, c.downloadUrls)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.url)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.duration)),
                                                           ::djinni::get(::djinni::Set<::djinni::String>::fromCpp(jniEnv, c.authors)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.title)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.videoDescription)),
                                                           ::djinni::get(::djinni_generated::NativeContentType::fromCpp(jniEnv, c.type)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeVideo::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 9);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeVideo>::get();
    return {::djinni::Bool::toCpp(jniEnv, jniEnv->GetBooleanField(j, data.field_mHasQuestions)),
            ::djinni::Map<::djinni::String, ::djinni::String>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mDownloadUrls)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mUrl)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mDuration)),
            ::djinni::Set<::djinni::String>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mAuthors)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mTitle)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mVideoDescription)),
            ::djinni_generated::NativeContentType::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mType))};
}

}  // namespace djinni_generated
