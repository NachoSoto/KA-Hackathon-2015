// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.idl

#pragma once

#include "djinni_support.hpp"
#include "video.hpp"

namespace djinni_generated {

class NativeVideo final {
public:
    using CppType = ::Khan::Video;
    using JniType = jobject;

    using Boxed = NativeVideo;

    ~NativeVideo();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeVideo();
    friend ::djinni::JniClass<NativeVideo>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("org/khanacademy/core/shared/Video") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(ZLjava/util/HashMap;Ljava/lang/String;ILjava/util/HashSet;Ljava/lang/String;Ljava/lang/String;Lorg/khanacademy/core/shared/ContentType;)V") };
    const jfieldID field_mHasQuestions { ::djinni::jniGetFieldID(clazz.get(), "mHasQuestions", "Z") };
    const jfieldID field_mDownloadUrls { ::djinni::jniGetFieldID(clazz.get(), "mDownloadUrls", "Ljava/util/HashMap;") };
    const jfieldID field_mUrl { ::djinni::jniGetFieldID(clazz.get(), "mUrl", "Ljava/lang/String;") };
    const jfieldID field_mDuration { ::djinni::jniGetFieldID(clazz.get(), "mDuration", "I") };
    const jfieldID field_mAuthors { ::djinni::jniGetFieldID(clazz.get(), "mAuthors", "Ljava/util/HashSet;") };
    const jfieldID field_mTitle { ::djinni::jniGetFieldID(clazz.get(), "mTitle", "Ljava/lang/String;") };
    const jfieldID field_mVideoDescription { ::djinni::jniGetFieldID(clazz.get(), "mVideoDescription", "Ljava/lang/String;") };
    const jfieldID field_mType { ::djinni::jniGetFieldID(clazz.get(), "mType", "Lorg/khanacademy/core/shared/ContentType;") };
};

}  // namespace djinni_generated
